library(knitr)
?knitr
x <- c(32,64,96,118,126,144,152.5,158)
y <- c(99.5,104.8,108.5,100,86,64,35.3,15)
lm(y ~ x + I(x^2) + I(x^3))
plot(x,y)
?line
lm(y ~ poly(x, 3, raw=TRUE))
lm(y ~ poly(x, 3))
x <- 1:10
y <- x + c(-0.5,0.5)
plot(x,y, xlim=c(0,11), ylim=c(-1,12))
fit1 <- lm( y~offset(x) -1 )
fit2 <- lm( y~x )
fit3 <- lm( y~poly(x,3) )
fit4 <- lm( y~poly(x,9) )
library(splines)
fit5 <- lm( y~ns(x, 3) )
fit6 <- lm( y~ns(x, 9) )
fit7 <- lm( y ~ x + cos(x*pi) )
xx <- seq(0,11, length.out=250)
lines(xx, predict(fit1, data.frame(x=xx)), col='blue')
lines(xx, predict(fit2, data.frame(x=xx)), col='green')
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
lines(xx, predict(fit4, data.frame(x=xx)), col='purple')
lines(xx, predict(fit5, data.frame(x=xx)), col='orange')
lines(xx, predict(fit6, data.frame(x=xx)), col='grey')
lines(xx, predict(fit7, data.frame(x=xx)), col='black')
plot(x,y, xlim=c(0,11), ylim=c(-1,12))
xx <- seq(0,11, length.out=250)
xx
lines(xx, predict(fit1, data.frame(x=xx)), col='blue')
lines(xx, predict(fit2, data.frame(x=xx)), col='green')
lines(xx, predict(fit3, data.frame(x=xx)), col='red')
fit3
polyfit <- function(i) x <- AIC(lm(y~poly(x,i)))
as.integer(optimize(polyfit,interval = c(1,length(x)-1))$minimum)
x
y
for (i in 2:length(x)-1) print(polyfit(i))
length(x)
?log
log2(2)
log2(4)
600/8
1.6e6
160e6
160e6/250e6
par(mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
x <- seq(1,10)
y<-x^2
plot(x,y)
par(mar=c(3,3,2,1), mgp=c(2,.7,0), tck=.02, las=1)
plot(x,y)
par(mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01, las=1)
plot(x,y)
library(MASS)
example(stepAIC
)
?stepAIC
example(stepAIC)
example(birthwt)
birthwt.glm <- glm(low ~ ., family = binomial, data = bwt)
ls()
head(bwt)
dim(bwt)
summary(bwt)
x <- 1:10
y <- x^2
getwd()
library(slidify)
author("JSGtest")
slidify("index.Rmd")
publish(user="johnstantongeddes", repo="JSGtest", host='github')
